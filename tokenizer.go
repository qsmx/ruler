// Code generated by golex. DO NOT EDIT.

package ruler

type yylexer struct {
	src     string
	buf     []byte
	empty   bool
	current byte
	size    int
	pos     int
}

func (y *yylexer) getc() byte {
	if y.current != 0 {
		y.buf = append(y.buf, y.current)
	}
	y.current = 0
	if y.pos < y.size {
		y.current = y.src[y.pos]
		y.pos++
	}

	return y.current
}

func (y yylexer) Error(string) {
	throwException(ERR_STATUS_ABORT, "ruler[%s] buf[%s] pos[%d]", y.src, string(y.buf), y.pos)
}

func (y *yylexer) Lex(lval *yySymType) int {
	c := y.current
	if y.empty {
		c, y.empty = y.getc(), false
	}

yystate0:

	y.buf = y.buf[:0]

	goto yystart1

	goto yystate0 // silence unused label error
	goto yystate1 // silence unused label error
yystate1:
	c = y.getc()
yystart1:
	switch {
	default:
		goto yyabort
	case c == '!':
		goto yystate3
	case c == '"':
		goto yystate5
	case c == '&':
		goto yystate9
	case c == '.':
		goto yystate11
	case c == '<':
		goto yystate18
	case c == '=':
		goto yystate20
	case c == '>':
		goto yystate22
	case c == '\t' || c == '\r' || c == ' ':
		goto yystate2
	case c == 'f':
		goto yystate27
	case c == 'i':
		goto yystate32
	case c == 'n':
		goto yystate34
	case c == 't':
		goto yystate39
	case c == '|':
		goto yystate43
	case c >= '0' && c <= '9':
		goto yystate15
	case c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'e' || c == 'g' || c == 'h' || c >= 'j' && c <= 'm' || c >= 'o' && c <= 's' || c >= 'u' && c <= 'z':
		goto yystate24
	}

yystate2:
	c = y.getc()
	switch {
	default:
		goto yyrule1
	case c == '\t' || c == '\r' || c == ' ':
		goto yystate2
	}

yystate3:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '=':
		goto yystate4
	}

yystate4:
	c = y.getc()
	goto yyrule3

yystate5:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate6
	case c == '\\':
		goto yystate7
	case c >= '\x01' && c <= '!' || c >= '#' && c <= '[' || c >= ']' && c <= 'ÿ':
		goto yystate5
	}

yystate6:
	c = y.getc()
	goto yyrule14

yystate7:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate8
	case c == '\\':
		goto yystate7
	case c >= '\x01' && c <= '!' || c >= '#' && c <= '[' || c >= ']' && c <= 'ÿ':
		goto yystate5
	}

yystate8:
	c = y.getc()
	switch {
	default:
		goto yyrule14
	case c == '"':
		goto yystate6
	case c == '\\':
		goto yystate7
	case c >= '\x01' && c <= '!' || c >= '#' && c <= '[' || c >= ']' && c <= 'ÿ':
		goto yystate5
	}

yystate9:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '&':
		goto yystate10
	}

yystate10:
	c = y.getc()
	goto yyrule8

yystate11:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate12
	case c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate14
	}

yystate12:
	c = y.getc()
	switch {
	default:
		goto yyrule16
	case c == '.':
		goto yystate13
	case c >= '0' && c <= '9':
		goto yystate12
	case c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate14
	}

yystate13:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate14
	}

yystate14:
	c = y.getc()
	switch {
	default:
		goto yyrule18
	case c == '.':
		goto yystate13
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate14
	}

yystate15:
	c = y.getc()
	switch {
	default:
		goto yyrule15
	case c == '.':
		goto yystate16
	case c >= '0' && c <= '9':
		goto yystate15
	}

yystate16:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate17
	}

yystate17:
	c = y.getc()
	switch {
	default:
		goto yyrule16
	case c >= '0' && c <= '9':
		goto yystate17
	}

yystate18:
	c = y.getc()
	switch {
	default:
		goto yyrule7
	case c == '=':
		goto yystate19
	}

yystate19:
	c = y.getc()
	goto yyrule6

yystate20:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '=':
		goto yystate21
	}

yystate21:
	c = y.getc()
	goto yyrule2

yystate22:
	c = y.getc()
	switch {
	default:
		goto yyrule5
	case c == '=':
		goto yystate23
	}

yystate23:
	c = y.getc()
	goto yyrule4

yystate24:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate24
	}

yystate25:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate26
	}

yystate26:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '.':
		goto yystate13
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate26
	}

yystate27:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'a':
		goto yystate28
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'b' && c <= 'z':
		goto yystate24
	}

yystate28:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'l':
		goto yystate29
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'k' || c >= 'm' && c <= 'z':
		goto yystate24
	}

yystate29:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 's':
		goto yystate30
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'r' || c >= 't' && c <= 'z':
		goto yystate24
	}

yystate30:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'e':
		goto yystate31
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'd' || c >= 'f' && c <= 'z':
		goto yystate24
	}

yystate31:
	c = y.getc()
	switch {
	default:
		goto yyrule11
	case c == '.':
		goto yystate13
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate24
	}

yystate32:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'n':
		goto yystate33
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'm' || c >= 'o' && c <= 'z':
		goto yystate24
	}

yystate33:
	c = y.getc()
	switch {
	default:
		goto yyrule12
	case c == '.':
		goto yystate13
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate24
	}

yystate34:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'o':
		goto yystate35
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'n' || c >= 'p' && c <= 'z':
		goto yystate24
	}

yystate35:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 't':
		goto yystate36
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 's' || c >= 'u' && c <= 'z':
		goto yystate24
	}

yystate36:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'i':
		goto yystate37
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'h' || c >= 'j' && c <= 'z':
		goto yystate24
	}

yystate37:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'n':
		goto yystate38
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'm' || c >= 'o' && c <= 'z':
		goto yystate24
	}

yystate38:
	c = y.getc()
	switch {
	default:
		goto yyrule13
	case c == '.':
		goto yystate13
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate24
	}

yystate39:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'r':
		goto yystate40
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'q' || c >= 's' && c <= 'z':
		goto yystate24
	}

yystate40:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'u':
		goto yystate41
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 't' || c >= 'v' && c <= 'z':
		goto yystate24
	}

yystate41:
	c = y.getc()
	switch {
	default:
		goto yyrule17
	case c == '.':
		goto yystate13
	case c == 'e':
		goto yystate42
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'd' || c >= 'f' && c <= 'z':
		goto yystate24
	}

yystate42:
	c = y.getc()
	switch {
	default:
		goto yyrule10
	case c == '.':
		goto yystate13
	case c == '|':
		goto yystate25
	case c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate24
	}

yystate43:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '|':
		goto yystate44
	case c >= 'A' && c <= 'Z' || c == '_' || c >= 'a' && c <= 'z':
		goto yystate24
	}

yystate44:
	c = y.getc()
	goto yyrule9

yyrule1: // [ \t\r]+

	goto yystate0
yyrule2: // "=="
	{
		return EQU
	}
yyrule3: // "!="
	{
		return NEQ
	}
yyrule4: // ">="
	{
		return GEQ
	}
yyrule5: // ">"
	{
		return GTR
	}
yyrule6: // "<="
	{
		return LEQ
	}
yyrule7: // "<"
	{
		return LSS
	}
yyrule8: // "&&"
	{
		return AND
	}
yyrule9: // "||"
	{
		return OR
	}
yyrule10: // true
	{
		return TRUE
	}
yyrule11: // false
	{
		return FALSE
	}
yyrule12: // in
	{
		return IN
	}
yyrule13: // notin
	{
		return NOTIN
	}
yyrule14: // {string}
	{
		lval.value = string(y.buf[1 : len(y.buf)-1])
		return STRING
		goto yystate0
	}
yyrule15: // {int}
	{
		lval.value = string(y.buf)
		return INT
		goto yystate0
	}
yyrule16: // {float}
	{
		lval.value = string(y.buf)
		return FLOAT
		goto yystate0
	}
yyrule17: // {identifier}
	{
		lval.value = string(y.buf)
		return IDENT
		goto yystate0
	}
yyrule18: // {arrays}
	{
		lval.value = string(y.buf)
		return ARRAYS
		goto yystate0
	}
	panic("unreachable")

	goto yyabort // silence unused label error

yyabort: // no lexem recognized
	y.empty = true
	if len(y.buf) != 0 {
		y.Error("")
	}
	return int(c)
}

func newLexer(src string) (y *yylexer) {
	y = &yylexer{
		src:     src,
		size:    len(src),
		pos:     1,
		current: src[0],
	}
	return
}
