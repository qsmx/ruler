state 0 //

    0 $accept: . Input
    1 Input: .  [$end]

    $end    reduce using rule 1 (Input)
    '('     shift, and goto state 13
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays      goto state 16
    Bool        goto state 8
    BoolCell    goto state 11
    CalcCell    goto state 14
    Expr        goto state 2
    ExprBool    goto state 3
    ExprCalc    goto state 12
    ExprExt     goto state 4
    ExprFilter  goto state 7
    ExprFunc    goto state 9
    ExprList    goto state 5
    FilterCell  goto state 6
    FilterName  goto state 21
    Float       goto state 18
    Ident       goto state 10
    Input       goto state 1
    Int         goto state 17
    String      goto state 19

state 1 // [$end]

    0 $accept: Input .  [$end]

    $end  accept

state 2 // ARRAYS [$end]

    2 Input: Expr .  [$end]

    $end  reduce using rule 2 (Input)

state 3 // FALSE [$end]

    3 Expr: ExprBool .  [$end]
   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   46 ExprFilter: ExprBool . AND FilterCell  // assoc %left, prec 2
   47 ExprFilter: ExprBool . OR FilterCell  // assoc %left, prec 1

    $end  reduce using rule 3 (Expr)
    AND   shift, and goto state 97
    OR    shift, and goto state 98

state 4 // ARRAYS [$end]

    4 Expr: ExprExt .  [$end]
   31 CalcCell: ExprExt .  ['%', '*', '+', '-', '/', EQU, GEQ, GTR, LEQ, LSS, NEQ]

    $end  reduce using rule 4 (Expr)
    '%'   reduce using rule 31 (CalcCell)
    '*'   reduce using rule 31 (CalcCell)
    '+'   reduce using rule 31 (CalcCell)
    '-'   reduce using rule 31 (CalcCell)
    '/'   reduce using rule 31 (CalcCell)
    EQU   reduce using rule 31 (CalcCell)
    GEQ   reduce using rule 31 (CalcCell)
    GTR   reduce using rule 31 (CalcCell)
    LEQ   reduce using rule 31 (CalcCell)
    LSS   reduce using rule 31 (CalcCell)
    NEQ   reduce using rule 31 (CalcCell)

state 5 // ARRAYS '[' FALSE ']' [$end]

    5 Expr: ExprList .  [$end]

    $end  reduce using rule 5 (Expr)

state 6 // ARRAYS '[' FALSE ']' [$end]

    6 ExprList: FilterCell .  [$end]
   44 ExprFilter: FilterCell . AND ExprBool  // assoc %left, prec 2
   45 ExprFilter: FilterCell . OR ExprBool  // assoc %left, prec 1

    $end  reduce using rule 6 (ExprList)
    AND   shift, and goto state 93
    OR    shift, and goto state 94

state 7 // ARRAYS '[' FALSE ']' AND FALSE [$end]

    7 ExprList: ExprFilter .  [$end]

    $end  reduce using rule 7 (ExprList)

state 8 // FALSE [$end]

    8 ExprBool: Bool .  [$end, ')', ']', AND, OR]
   21 BoolCell: Bool .  [EQU, NEQ]

    $end  reduce using rule 8 (ExprBool)
    ')'   reduce using rule 8 (ExprBool)
    ']'   reduce using rule 8 (ExprBool)
    AND   reduce using rule 8 (ExprBool)
    EQU   reduce using rule 21 (BoolCell)
    NEQ   reduce using rule 21 (BoolCell)
    OR    reduce using rule 8 (ExprBool)

state 9 // IDENT '(' ')' [$end]

    9 ExprBool: ExprFunc .  [$end, ')', ']', AND, OR]
   32 CalcCell: ExprFunc .  ['%', ')', '*', '+', '-', '/', EQU, GEQ, GTR, LEQ, LSS, NEQ]

    $end  reduce using rule 9 (ExprBool)
    '%'   reduce using rule 32 (CalcCell)
    ')'   reduce using rule 9 (ExprBool)
    '*'   reduce using rule 32 (CalcCell)
    '+'   reduce using rule 32 (CalcCell)
    '-'   reduce using rule 32 (CalcCell)
    '/'   reduce using rule 32 (CalcCell)
    ']'   reduce using rule 9 (ExprBool)
    AND   reduce using rule 9 (ExprBool)
    EQU   reduce using rule 32 (CalcCell)
    GEQ   reduce using rule 32 (CalcCell)
    GTR   reduce using rule 32 (CalcCell)
    LEQ   reduce using rule 32 (CalcCell)
    LSS   reduce using rule 32 (CalcCell)
    NEQ   reduce using rule 32 (CalcCell)
    OR    reduce using rule 9 (ExprBool)
    conflict on ')', reduce using rule 9, reduce using rule 32

state 10 // IDENT [$end]

   10 ExprBool: Ident . IN '(' InArgs ')'
   11 ExprBool: Ident . NOTIN '(' InArgs ')'
   35 ExprExt: Ident .  [$end, '%', ')', '*', '+', '-', '/', EQU, GEQ, GTR, LEQ, LSS, NEQ]
   50 FilterName: Ident .  ['[']

    $end   reduce using rule 35 (ExprExt)
    '%'    reduce using rule 35 (ExprExt)
    ')'    reduce using rule 35 (ExprExt)
    '*'    reduce using rule 35 (ExprExt)
    '+'    reduce using rule 35 (ExprExt)
    '-'    reduce using rule 35 (ExprExt)
    '/'    reduce using rule 35 (ExprExt)
    '['    reduce using rule 50 (FilterName)
    EQU    reduce using rule 35 (ExprExt)
    GEQ    reduce using rule 35 (ExprExt)
    GTR    reduce using rule 35 (ExprExt)
    IN     shift, and goto state 67
    LEQ    reduce using rule 35 (ExprExt)
    LSS    reduce using rule 35 (ExprExt)
    NEQ    reduce using rule 35 (ExprExt)
    NOTIN  shift, and goto state 68

state 11 // ARRAYS [EQU]

   12 ExprBool: BoolCell . NEQ BoolCell  // assoc %left, prec 3
   13 ExprBool: BoolCell . EQU BoolCell  // assoc %left, prec 3

    EQU  shift, and goto state 102
    NEQ  shift, and goto state 101

state 12 // ARRAYS ['%']

   14 ExprBool: ExprCalc . LSS ExprCalc  // assoc %left, prec 3
   15 ExprBool: ExprCalc . LEQ ExprCalc  // assoc %left, prec 3
   16 ExprBool: ExprCalc . GTR ExprCalc  // assoc %left, prec 3
   17 ExprBool: ExprCalc . GEQ ExprCalc  // assoc %left, prec 3
   22 BoolCell: ExprCalc .  [EQU, NEQ]
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    '%'  shift, and goto state 51
    '*'  shift, and goto state 49
    '+'  shift, and goto state 47
    '-'  shift, and goto state 48
    '/'  shift, and goto state 50
    EQU  reduce using rule 22 (BoolCell)
    GEQ  shift, and goto state 46
    GTR  shift, and goto state 45
    LEQ  shift, and goto state 44
    LSS  shift, and goto state 43
    NEQ  reduce using rule 22 (BoolCell)

state 13 // '('

   20 ExprBool: '(' . ExprBool ')'
   30 ExprCalc: '(' . ExprCalc ')'
   48 ExprFilter: '(' . ExprFilter ')'

    '('     shift, and goto state 13
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays      goto state 16
    Bool        goto state 8
    BoolCell    goto state 11
    CalcCell    goto state 14
    ExprBool    goto state 89
    ExprCalc    goto state 36
    ExprExt     goto state 34
    ExprFilter  goto state 91
    ExprFunc    goto state 9
    FilterCell  goto state 90
    FilterName  goto state 21
    Float       goto state 18
    Ident       goto state 10
    Int         goto state 17
    String      goto state 19

state 14 // ARRAYS ['%']

   23 ExprCalc: CalcCell .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 23 (ExprCalc)
    '%'   reduce using rule 23 (ExprCalc)
    ')'   reduce using rule 23 (ExprCalc)
    '*'   reduce using rule 23 (ExprCalc)
    '+'   reduce using rule 23 (ExprCalc)
    ','   reduce using rule 23 (ExprCalc)
    '-'   reduce using rule 23 (ExprCalc)
    '/'   reduce using rule 23 (ExprCalc)
    ']'   reduce using rule 23 (ExprCalc)
    AND   reduce using rule 23 (ExprCalc)
    EQU   reduce using rule 23 (ExprCalc)
    GEQ   reduce using rule 23 (ExprCalc)
    GTR   reduce using rule 23 (ExprCalc)
    LEQ   reduce using rule 23 (ExprCalc)
    LSS   reduce using rule 23 (ExprCalc)
    NEQ   reduce using rule 23 (ExprCalc)
    OR    reduce using rule 23 (ExprCalc)

state 15 // '-'

   29 ExprCalc: '-' . ExprCalc  // assoc %left, prec 6

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 88
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 16 // ARRAYS [$end]

   36 ExprExt: Arrays .  [$end, '%', ')', '*', '+', '-', '/', EQU, GEQ, GTR, LEQ, LSS, NEQ]
   51 FilterName: Arrays .  ['[']

    $end  reduce using rule 36 (ExprExt)
    '%'   reduce using rule 36 (ExprExt)
    ')'   reduce using rule 36 (ExprExt)
    '*'   reduce using rule 36 (ExprExt)
    '+'   reduce using rule 36 (ExprExt)
    '-'   reduce using rule 36 (ExprExt)
    '/'   reduce using rule 36 (ExprExt)
    '['   reduce using rule 51 (FilterName)
    EQU   reduce using rule 36 (ExprExt)
    GEQ   reduce using rule 36 (ExprExt)
    GTR   reduce using rule 36 (ExprExt)
    LEQ   reduce using rule 36 (ExprExt)
    LSS   reduce using rule 36 (ExprExt)
    NEQ   reduce using rule 36 (ExprExt)

state 17 // INT [$end]

   37 ExprExt: Int .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 37 (ExprExt)
    '%'   reduce using rule 37 (ExprExt)
    ')'   reduce using rule 37 (ExprExt)
    '*'   reduce using rule 37 (ExprExt)
    '+'   reduce using rule 37 (ExprExt)
    ','   reduce using rule 37 (ExprExt)
    '-'   reduce using rule 37 (ExprExt)
    '/'   reduce using rule 37 (ExprExt)
    ']'   reduce using rule 37 (ExprExt)
    AND   reduce using rule 37 (ExprExt)
    EQU   reduce using rule 37 (ExprExt)
    GEQ   reduce using rule 37 (ExprExt)
    GTR   reduce using rule 37 (ExprExt)
    LEQ   reduce using rule 37 (ExprExt)
    LSS   reduce using rule 37 (ExprExt)
    NEQ   reduce using rule 37 (ExprExt)
    OR    reduce using rule 37 (ExprExt)

state 18 // FLOAT [$end]

   38 ExprExt: Float .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 38 (ExprExt)
    '%'   reduce using rule 38 (ExprExt)
    ')'   reduce using rule 38 (ExprExt)
    '*'   reduce using rule 38 (ExprExt)
    '+'   reduce using rule 38 (ExprExt)
    ','   reduce using rule 38 (ExprExt)
    '-'   reduce using rule 38 (ExprExt)
    '/'   reduce using rule 38 (ExprExt)
    ']'   reduce using rule 38 (ExprExt)
    AND   reduce using rule 38 (ExprExt)
    EQU   reduce using rule 38 (ExprExt)
    GEQ   reduce using rule 38 (ExprExt)
    GTR   reduce using rule 38 (ExprExt)
    LEQ   reduce using rule 38 (ExprExt)
    LSS   reduce using rule 38 (ExprExt)
    NEQ   reduce using rule 38 (ExprExt)
    OR    reduce using rule 38 (ExprExt)

state 19 // STRING [$end]

   39 ExprExt: String .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 39 (ExprExt)
    '%'   reduce using rule 39 (ExprExt)
    ')'   reduce using rule 39 (ExprExt)
    '*'   reduce using rule 39 (ExprExt)
    '+'   reduce using rule 39 (ExprExt)
    ','   reduce using rule 39 (ExprExt)
    '-'   reduce using rule 39 (ExprExt)
    '/'   reduce using rule 39 (ExprExt)
    ']'   reduce using rule 39 (ExprExt)
    AND   reduce using rule 39 (ExprExt)
    EQU   reduce using rule 39 (ExprExt)
    GEQ   reduce using rule 39 (ExprExt)
    GTR   reduce using rule 39 (ExprExt)
    LEQ   reduce using rule 39 (ExprExt)
    LSS   reduce using rule 39 (ExprExt)
    NEQ   reduce using rule 39 (ExprExt)
    OR    reduce using rule 39 (ExprExt)

state 20 // IDENT

   40 ExprFunc: IDENT . '(' ')'
   41 ExprFunc: IDENT . '(' Args ')'
   52 Ident: IDENT .  [$end, '%', ')', '*', '+', ',', '-', '/', '[', ']', AND, EQU, GEQ, GTR, IN, LEQ, LSS, NEQ, NOTIN, OR]

    $end   reduce using rule 52 (Ident)
    '%'    reduce using rule 52 (Ident)
    '('    shift, and goto state 79
    ')'    reduce using rule 52 (Ident)
    '*'    reduce using rule 52 (Ident)
    '+'    reduce using rule 52 (Ident)
    ','    reduce using rule 52 (Ident)
    '-'    reduce using rule 52 (Ident)
    '/'    reduce using rule 52 (Ident)
    '['    reduce using rule 52 (Ident)
    ']'    reduce using rule 52 (Ident)
    AND    reduce using rule 52 (Ident)
    EQU    reduce using rule 52 (Ident)
    GEQ    reduce using rule 52 (Ident)
    GTR    reduce using rule 52 (Ident)
    IN     reduce using rule 52 (Ident)
    LEQ    reduce using rule 52 (Ident)
    LSS    reduce using rule 52 (Ident)
    NEQ    reduce using rule 52 (Ident)
    NOTIN  reduce using rule 52 (Ident)
    OR     reduce using rule 52 (Ident)

state 21 // ARRAYS ['[']

   49 FilterCell: FilterName . '[' ExprBool ']'

    '['  shift, and goto state 30

state 22 // IN

   53 Ident: IN .  [$end, '%', ')', '*', '+', ',', '-', '/', '[', ']', AND, EQU, GEQ, GTR, IN, LEQ, LSS, NEQ, NOTIN, OR]

    $end   reduce using rule 53 (Ident)
    '%'    reduce using rule 53 (Ident)
    ')'    reduce using rule 53 (Ident)
    '*'    reduce using rule 53 (Ident)
    '+'    reduce using rule 53 (Ident)
    ','    reduce using rule 53 (Ident)
    '-'    reduce using rule 53 (Ident)
    '/'    reduce using rule 53 (Ident)
    '['    reduce using rule 53 (Ident)
    ']'    reduce using rule 53 (Ident)
    AND    reduce using rule 53 (Ident)
    EQU    reduce using rule 53 (Ident)
    GEQ    reduce using rule 53 (Ident)
    GTR    reduce using rule 53 (Ident)
    IN     reduce using rule 53 (Ident)
    LEQ    reduce using rule 53 (Ident)
    LSS    reduce using rule 53 (Ident)
    NEQ    reduce using rule 53 (Ident)
    NOTIN  reduce using rule 53 (Ident)
    OR     reduce using rule 53 (Ident)

state 23 // NOTIN

   54 Ident: NOTIN .  [$end, '%', ')', '*', '+', ',', '-', '/', '[', ']', AND, EQU, GEQ, GTR, IN, LEQ, LSS, NEQ, NOTIN, OR]

    $end   reduce using rule 54 (Ident)
    '%'    reduce using rule 54 (Ident)
    ')'    reduce using rule 54 (Ident)
    '*'    reduce using rule 54 (Ident)
    '+'    reduce using rule 54 (Ident)
    ','    reduce using rule 54 (Ident)
    '-'    reduce using rule 54 (Ident)
    '/'    reduce using rule 54 (Ident)
    '['    reduce using rule 54 (Ident)
    ']'    reduce using rule 54 (Ident)
    AND    reduce using rule 54 (Ident)
    EQU    reduce using rule 54 (Ident)
    GEQ    reduce using rule 54 (Ident)
    GTR    reduce using rule 54 (Ident)
    IN     reduce using rule 54 (Ident)
    LEQ    reduce using rule 54 (Ident)
    LSS    reduce using rule 54 (Ident)
    NEQ    reduce using rule 54 (Ident)
    NOTIN  reduce using rule 54 (Ident)
    OR     reduce using rule 54 (Ident)

state 24 // ARRAYS

   55 Arrays: ARRAYS .  [$end, '%', ')', '*', '+', ',', '-', '/', '[', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 55 (Arrays)
    '%'   reduce using rule 55 (Arrays)
    ')'   reduce using rule 55 (Arrays)
    '*'   reduce using rule 55 (Arrays)
    '+'   reduce using rule 55 (Arrays)
    ','   reduce using rule 55 (Arrays)
    '-'   reduce using rule 55 (Arrays)
    '/'   reduce using rule 55 (Arrays)
    '['   reduce using rule 55 (Arrays)
    ']'   reduce using rule 55 (Arrays)
    AND   reduce using rule 55 (Arrays)
    EQU   reduce using rule 55 (Arrays)
    GEQ   reduce using rule 55 (Arrays)
    GTR   reduce using rule 55 (Arrays)
    LEQ   reduce using rule 55 (Arrays)
    LSS   reduce using rule 55 (Arrays)
    NEQ   reduce using rule 55 (Arrays)
    OR    reduce using rule 55 (Arrays)

state 25 // INT

   56 Int: INT .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 56 (Int)
    '%'   reduce using rule 56 (Int)
    ')'   reduce using rule 56 (Int)
    '*'   reduce using rule 56 (Int)
    '+'   reduce using rule 56 (Int)
    ','   reduce using rule 56 (Int)
    '-'   reduce using rule 56 (Int)
    '/'   reduce using rule 56 (Int)
    ']'   reduce using rule 56 (Int)
    AND   reduce using rule 56 (Int)
    EQU   reduce using rule 56 (Int)
    GEQ   reduce using rule 56 (Int)
    GTR   reduce using rule 56 (Int)
    LEQ   reduce using rule 56 (Int)
    LSS   reduce using rule 56 (Int)
    NEQ   reduce using rule 56 (Int)
    OR    reduce using rule 56 (Int)

state 26 // FLOAT

   57 Float: FLOAT .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 57 (Float)
    '%'   reduce using rule 57 (Float)
    ')'   reduce using rule 57 (Float)
    '*'   reduce using rule 57 (Float)
    '+'   reduce using rule 57 (Float)
    ','   reduce using rule 57 (Float)
    '-'   reduce using rule 57 (Float)
    '/'   reduce using rule 57 (Float)
    ']'   reduce using rule 57 (Float)
    AND   reduce using rule 57 (Float)
    EQU   reduce using rule 57 (Float)
    GEQ   reduce using rule 57 (Float)
    GTR   reduce using rule 57 (Float)
    LEQ   reduce using rule 57 (Float)
    LSS   reduce using rule 57 (Float)
    NEQ   reduce using rule 57 (Float)
    OR    reduce using rule 57 (Float)

state 27 // STRING

   58 String: STRING .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 58 (String)
    '%'   reduce using rule 58 (String)
    ')'   reduce using rule 58 (String)
    '*'   reduce using rule 58 (String)
    '+'   reduce using rule 58 (String)
    ','   reduce using rule 58 (String)
    '-'   reduce using rule 58 (String)
    '/'   reduce using rule 58 (String)
    ']'   reduce using rule 58 (String)
    AND   reduce using rule 58 (String)
    EQU   reduce using rule 58 (String)
    GEQ   reduce using rule 58 (String)
    GTR   reduce using rule 58 (String)
    LEQ   reduce using rule 58 (String)
    LSS   reduce using rule 58 (String)
    NEQ   reduce using rule 58 (String)
    OR    reduce using rule 58 (String)

state 28 // TRUE

   59 Bool: TRUE .  [$end, ')', ',', ']', AND, EQU, NEQ, OR]

    $end  reduce using rule 59 (Bool)
    ')'   reduce using rule 59 (Bool)
    ','   reduce using rule 59 (Bool)
    ']'   reduce using rule 59 (Bool)
    AND   reduce using rule 59 (Bool)
    EQU   reduce using rule 59 (Bool)
    NEQ   reduce using rule 59 (Bool)
    OR    reduce using rule 59 (Bool)

state 29 // FALSE

   60 Bool: FALSE .  [$end, ')', ',', ']', AND, EQU, NEQ, OR]

    $end  reduce using rule 60 (Bool)
    ')'   reduce using rule 60 (Bool)
    ','   reduce using rule 60 (Bool)
    ']'   reduce using rule 60 (Bool)
    AND   reduce using rule 60 (Bool)
    EQU   reduce using rule 60 (Bool)
    NEQ   reduce using rule 60 (Bool)
    OR    reduce using rule 60 (Bool)

state 30 // ARRAYS '['

   49 FilterCell: FilterName '[' . ExprBool ']'

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 8
    BoolCell  goto state 11
    CalcCell  goto state 14
    ExprBool  goto state 32
    ExprCalc  goto state 12
    ExprExt   goto state 34
    ExprFunc  goto state 9
    Float     goto state 18
    Ident     goto state 31
    Int       goto state 17
    String    goto state 19

state 31 // ARRAYS '[' IDENT ['%']

   10 ExprBool: Ident . IN '(' InArgs ')'
   11 ExprBool: Ident . NOTIN '(' InArgs ')'
   35 ExprExt: Ident .  ['%', ')', '*', '+', '-', '/', EQU, GEQ, GTR, LEQ, LSS, NEQ]

    '%'    reduce using rule 35 (ExprExt)
    ')'    reduce using rule 35 (ExprExt)
    '*'    reduce using rule 35 (ExprExt)
    '+'    reduce using rule 35 (ExprExt)
    '-'    reduce using rule 35 (ExprExt)
    '/'    reduce using rule 35 (ExprExt)
    EQU    reduce using rule 35 (ExprExt)
    GEQ    reduce using rule 35 (ExprExt)
    GTR    reduce using rule 35 (ExprExt)
    IN     shift, and goto state 67
    LEQ    reduce using rule 35 (ExprExt)
    LSS    reduce using rule 35 (ExprExt)
    NEQ    reduce using rule 35 (ExprExt)
    NOTIN  shift, and goto state 68

state 32 // ARRAYS '[' FALSE [']']

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   49 FilterCell: FilterName '[' ExprBool . ']'

    ']'  shift, and goto state 66
    AND  shift, and goto state 38
    OR   shift, and goto state 39

state 33 // ARRAYS '[' '('

   20 ExprBool: '(' . ExprBool ')'
   30 ExprCalc: '(' . ExprCalc ')'

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 8
    BoolCell  goto state 11
    CalcCell  goto state 14
    ExprBool  goto state 37
    ExprCalc  goto state 36
    ExprExt   goto state 34
    ExprFunc  goto state 9
    Float     goto state 18
    Ident     goto state 31
    Int       goto state 17
    String    goto state 19

state 34 // '-' ARRAYS [$end]

   31 CalcCell: ExprExt .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 31 (CalcCell)
    '%'   reduce using rule 31 (CalcCell)
    ')'   reduce using rule 31 (CalcCell)
    '*'   reduce using rule 31 (CalcCell)
    '+'   reduce using rule 31 (CalcCell)
    ','   reduce using rule 31 (CalcCell)
    '-'   reduce using rule 31 (CalcCell)
    '/'   reduce using rule 31 (CalcCell)
    ']'   reduce using rule 31 (CalcCell)
    AND   reduce using rule 31 (CalcCell)
    EQU   reduce using rule 31 (CalcCell)
    GEQ   reduce using rule 31 (CalcCell)
    GTR   reduce using rule 31 (CalcCell)
    LEQ   reduce using rule 31 (CalcCell)
    LSS   reduce using rule 31 (CalcCell)
    NEQ   reduce using rule 31 (CalcCell)
    OR    reduce using rule 31 (CalcCell)

state 35 // '-' ARRAYS [$end]

   36 ExprExt: Arrays .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 36 (ExprExt)
    '%'   reduce using rule 36 (ExprExt)
    ')'   reduce using rule 36 (ExprExt)
    '*'   reduce using rule 36 (ExprExt)
    '+'   reduce using rule 36 (ExprExt)
    ','   reduce using rule 36 (ExprExt)
    '-'   reduce using rule 36 (ExprExt)
    '/'   reduce using rule 36 (ExprExt)
    ']'   reduce using rule 36 (ExprExt)
    AND   reduce using rule 36 (ExprExt)
    EQU   reduce using rule 36 (ExprExt)
    GEQ   reduce using rule 36 (ExprExt)
    GTR   reduce using rule 36 (ExprExt)
    LEQ   reduce using rule 36 (ExprExt)
    LSS   reduce using rule 36 (ExprExt)
    NEQ   reduce using rule 36 (ExprExt)
    OR    reduce using rule 36 (ExprExt)

state 36 // '(' ARRAYS ['%']

   14 ExprBool: ExprCalc . LSS ExprCalc  // assoc %left, prec 3
   15 ExprBool: ExprCalc . LEQ ExprCalc  // assoc %left, prec 3
   16 ExprBool: ExprCalc . GTR ExprCalc  // assoc %left, prec 3
   17 ExprBool: ExprCalc . GEQ ExprCalc  // assoc %left, prec 3
   22 BoolCell: ExprCalc .  [EQU, NEQ]
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5
   30 ExprCalc: '(' ExprCalc . ')'

    '%'  shift, and goto state 51
    ')'  shift, and goto state 52
    '*'  shift, and goto state 49
    '+'  shift, and goto state 47
    '-'  shift, and goto state 48
    '/'  shift, and goto state 50
    EQU  reduce using rule 22 (BoolCell)
    GEQ  shift, and goto state 46
    GTR  shift, and goto state 45
    LEQ  shift, and goto state 44
    LSS  shift, and goto state 43
    NEQ  reduce using rule 22 (BoolCell)

state 37 // ARRAYS '[' '(' FALSE [')']

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   20 ExprBool: '(' ExprBool . ')'

    ')'  shift, and goto state 40
    AND  shift, and goto state 38
    OR   shift, and goto state 39

state 38 // ARRAYS '[' FALSE AND

   18 ExprBool: ExprBool AND . ExprBool  // assoc %left, prec 2

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 8
    BoolCell  goto state 11
    CalcCell  goto state 14
    ExprBool  goto state 42
    ExprCalc  goto state 12
    ExprExt   goto state 34
    ExprFunc  goto state 9
    Float     goto state 18
    Ident     goto state 31
    Int       goto state 17
    String    goto state 19

state 39 // ARRAYS '[' FALSE OR

   19 ExprBool: ExprBool OR . ExprBool  // assoc %left, prec 1

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 8
    BoolCell  goto state 11
    CalcCell  goto state 14
    ExprBool  goto state 41
    ExprCalc  goto state 12
    ExprExt   goto state 34
    ExprFunc  goto state 9
    Float     goto state 18
    Ident     goto state 31
    Int       goto state 17
    String    goto state 19

state 40 // '(' FALSE ')'

   20 ExprBool: '(' ExprBool ')' .  [$end, ')', ']', AND, OR]

    $end  reduce using rule 20 (ExprBool)
    ')'   reduce using rule 20 (ExprBool)
    ']'   reduce using rule 20 (ExprBool)
    AND   reduce using rule 20 (ExprBool)
    OR    reduce using rule 20 (ExprBool)

state 41 // FALSE OR FALSE [$end]

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   19 ExprBool: ExprBool OR ExprBool .  [$end, ')', ']', OR]  // assoc %left, prec 1

    $end  reduce using rule 19 (ExprBool)
    ')'   reduce using rule 19 (ExprBool)
    ']'   reduce using rule 19 (ExprBool)
    AND   shift, and goto state 38
    OR    reduce using rule 19 (ExprBool)

state 42 // FALSE AND FALSE [$end]

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   18 ExprBool: ExprBool AND ExprBool .  [$end, ')', ']', AND, OR]  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1

    $end  reduce using rule 18 (ExprBool)
    ')'   reduce using rule 18 (ExprBool)
    ']'   reduce using rule 18 (ExprBool)
    AND   reduce using rule 18 (ExprBool)
    OR    reduce using rule 18 (ExprBool)

state 43 // ARRAYS LSS

   14 ExprBool: ExprCalc LSS . ExprCalc  // assoc %left, prec 3

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 65
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 44 // ARRAYS LEQ

   15 ExprBool: ExprCalc LEQ . ExprCalc  // assoc %left, prec 3

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 64
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 45 // ARRAYS GTR

   16 ExprBool: ExprCalc GTR . ExprCalc  // assoc %left, prec 3

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 63
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 46 // ARRAYS GEQ

   17 ExprBool: ExprCalc GEQ . ExprCalc  // assoc %left, prec 3

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 62
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 47 // ARRAYS '+'

   24 ExprCalc: ExprCalc '+' . ExprCalc  // assoc %left, prec 4

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 61
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 48 // ARRAYS '-'

   25 ExprCalc: ExprCalc '-' . ExprCalc  // assoc %left, prec 4

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 60
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 49 // ARRAYS '*'

   26 ExprCalc: ExprCalc '*' . ExprCalc  // assoc %left, prec 5

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 59
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 50 // ARRAYS '/'

   27 ExprCalc: ExprCalc '/' . ExprCalc  // assoc %left, prec 5

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 58
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 51 // ARRAYS '%'

   28 ExprCalc: ExprCalc '%' . ExprCalc  // assoc %left, prec 5

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 53
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 52 // '(' ARRAYS ')'

   30 ExprCalc: '(' ExprCalc ')' .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 30 (ExprCalc)
    '%'   reduce using rule 30 (ExprCalc)
    ')'   reduce using rule 30 (ExprCalc)
    '*'   reduce using rule 30 (ExprCalc)
    '+'   reduce using rule 30 (ExprCalc)
    ','   reduce using rule 30 (ExprCalc)
    '-'   reduce using rule 30 (ExprCalc)
    '/'   reduce using rule 30 (ExprCalc)
    ']'   reduce using rule 30 (ExprCalc)
    AND   reduce using rule 30 (ExprCalc)
    EQU   reduce using rule 30 (ExprCalc)
    GEQ   reduce using rule 30 (ExprCalc)
    GTR   reduce using rule 30 (ExprCalc)
    LEQ   reduce using rule 30 (ExprCalc)
    LSS   reduce using rule 30 (ExprCalc)
    NEQ   reduce using rule 30 (ExprCalc)
    OR    reduce using rule 30 (ExprCalc)

state 53 // ARRAYS '%' ARRAYS [$end]

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc '%' ExprCalc .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]  // assoc %left, prec 5

    $end  reduce using rule 28 (ExprCalc)
    '%'   reduce using rule 28 (ExprCalc)
    ')'   reduce using rule 28 (ExprCalc)
    '*'   reduce using rule 28 (ExprCalc)
    '+'   reduce using rule 28 (ExprCalc)
    ','   reduce using rule 28 (ExprCalc)
    '-'   reduce using rule 28 (ExprCalc)
    '/'   reduce using rule 28 (ExprCalc)
    ']'   reduce using rule 28 (ExprCalc)
    AND   reduce using rule 28 (ExprCalc)
    EQU   reduce using rule 28 (ExprCalc)
    GEQ   reduce using rule 28 (ExprCalc)
    GTR   reduce using rule 28 (ExprCalc)
    LEQ   reduce using rule 28 (ExprCalc)
    LSS   reduce using rule 28 (ExprCalc)
    NEQ   reduce using rule 28 (ExprCalc)
    OR    reduce using rule 28 (ExprCalc)

state 54 // '-' '('

   30 ExprCalc: '(' . ExprCalc ')'

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays    goto state 35
    CalcCell  goto state 14
    ExprCalc  goto state 57
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 55 // '-' IDENT '(' ')' [$end]

   32 CalcCell: ExprFunc .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 32 (CalcCell)
    '%'   reduce using rule 32 (CalcCell)
    ')'   reduce using rule 32 (CalcCell)
    '*'   reduce using rule 32 (CalcCell)
    '+'   reduce using rule 32 (CalcCell)
    ','   reduce using rule 32 (CalcCell)
    '-'   reduce using rule 32 (CalcCell)
    '/'   reduce using rule 32 (CalcCell)
    ']'   reduce using rule 32 (CalcCell)
    AND   reduce using rule 32 (CalcCell)
    EQU   reduce using rule 32 (CalcCell)
    GEQ   reduce using rule 32 (CalcCell)
    GTR   reduce using rule 32 (CalcCell)
    LEQ   reduce using rule 32 (CalcCell)
    LSS   reduce using rule 32 (CalcCell)
    NEQ   reduce using rule 32 (CalcCell)
    OR    reduce using rule 32 (CalcCell)

state 56 // '-' IDENT [$end]

   35 ExprExt: Ident .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 35 (ExprExt)
    '%'   reduce using rule 35 (ExprExt)
    ')'   reduce using rule 35 (ExprExt)
    '*'   reduce using rule 35 (ExprExt)
    '+'   reduce using rule 35 (ExprExt)
    ','   reduce using rule 35 (ExprExt)
    '-'   reduce using rule 35 (ExprExt)
    '/'   reduce using rule 35 (ExprExt)
    ']'   reduce using rule 35 (ExprExt)
    AND   reduce using rule 35 (ExprExt)
    EQU   reduce using rule 35 (ExprExt)
    GEQ   reduce using rule 35 (ExprExt)
    GTR   reduce using rule 35 (ExprExt)
    LEQ   reduce using rule 35 (ExprExt)
    LSS   reduce using rule 35 (ExprExt)
    NEQ   reduce using rule 35 (ExprExt)
    OR    reduce using rule 35 (ExprExt)

state 57 // '-' '(' ARRAYS ['%']

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5
   30 ExprCalc: '(' ExprCalc . ')'

    '%'  shift, and goto state 51
    ')'  shift, and goto state 52
    '*'  shift, and goto state 49
    '+'  shift, and goto state 47
    '-'  shift, and goto state 48
    '/'  shift, and goto state 50

state 58 // ARRAYS '/' ARRAYS [$end]

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc '/' ExprCalc .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 27 (ExprCalc)
    '%'   reduce using rule 27 (ExprCalc)
    ')'   reduce using rule 27 (ExprCalc)
    '*'   reduce using rule 27 (ExprCalc)
    '+'   reduce using rule 27 (ExprCalc)
    ','   reduce using rule 27 (ExprCalc)
    '-'   reduce using rule 27 (ExprCalc)
    '/'   reduce using rule 27 (ExprCalc)
    ']'   reduce using rule 27 (ExprCalc)
    AND   reduce using rule 27 (ExprCalc)
    EQU   reduce using rule 27 (ExprCalc)
    GEQ   reduce using rule 27 (ExprCalc)
    GTR   reduce using rule 27 (ExprCalc)
    LEQ   reduce using rule 27 (ExprCalc)
    LSS   reduce using rule 27 (ExprCalc)
    NEQ   reduce using rule 27 (ExprCalc)
    OR    reduce using rule 27 (ExprCalc)

state 59 // ARRAYS '*' ARRAYS [$end]

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   26 ExprCalc: ExprCalc '*' ExprCalc .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 26 (ExprCalc)
    '%'   reduce using rule 26 (ExprCalc)
    ')'   reduce using rule 26 (ExprCalc)
    '*'   reduce using rule 26 (ExprCalc)
    '+'   reduce using rule 26 (ExprCalc)
    ','   reduce using rule 26 (ExprCalc)
    '-'   reduce using rule 26 (ExprCalc)
    '/'   reduce using rule 26 (ExprCalc)
    ']'   reduce using rule 26 (ExprCalc)
    AND   reduce using rule 26 (ExprCalc)
    EQU   reduce using rule 26 (ExprCalc)
    GEQ   reduce using rule 26 (ExprCalc)
    GTR   reduce using rule 26 (ExprCalc)
    LEQ   reduce using rule 26 (ExprCalc)
    LSS   reduce using rule 26 (ExprCalc)
    NEQ   reduce using rule 26 (ExprCalc)
    OR    reduce using rule 26 (ExprCalc)

state 60 // ARRAYS '-' ARRAYS [$end]

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc '-' ExprCalc .  [$end, ')', '+', ',', '-', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 25 (ExprCalc)
    '%'   shift, and goto state 51
    ')'   reduce using rule 25 (ExprCalc)
    '*'   shift, and goto state 49
    '+'   reduce using rule 25 (ExprCalc)
    ','   reduce using rule 25 (ExprCalc)
    '-'   reduce using rule 25 (ExprCalc)
    '/'   shift, and goto state 50
    ']'   reduce using rule 25 (ExprCalc)
    AND   reduce using rule 25 (ExprCalc)
    EQU   reduce using rule 25 (ExprCalc)
    GEQ   reduce using rule 25 (ExprCalc)
    GTR   reduce using rule 25 (ExprCalc)
    LEQ   reduce using rule 25 (ExprCalc)
    LSS   reduce using rule 25 (ExprCalc)
    NEQ   reduce using rule 25 (ExprCalc)
    OR    reduce using rule 25 (ExprCalc)

state 61 // ARRAYS '+' ARRAYS [$end]

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   24 ExprCalc: ExprCalc '+' ExprCalc .  [$end, ')', '+', ',', '-', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 24 (ExprCalc)
    '%'   shift, and goto state 51
    ')'   reduce using rule 24 (ExprCalc)
    '*'   shift, and goto state 49
    '+'   reduce using rule 24 (ExprCalc)
    ','   reduce using rule 24 (ExprCalc)
    '-'   reduce using rule 24 (ExprCalc)
    '/'   shift, and goto state 50
    ']'   reduce using rule 24 (ExprCalc)
    AND   reduce using rule 24 (ExprCalc)
    EQU   reduce using rule 24 (ExprCalc)
    GEQ   reduce using rule 24 (ExprCalc)
    GTR   reduce using rule 24 (ExprCalc)
    LEQ   reduce using rule 24 (ExprCalc)
    LSS   reduce using rule 24 (ExprCalc)
    NEQ   reduce using rule 24 (ExprCalc)
    OR    reduce using rule 24 (ExprCalc)

state 62 // ARRAYS GEQ ARRAYS [$end]

   17 ExprBool: ExprCalc GEQ ExprCalc .  [$end, ')', ']', AND, OR]  // assoc %left, prec 3
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 17 (ExprBool)
    '%'   shift, and goto state 51
    ')'   reduce using rule 17 (ExprBool)
    '*'   shift, and goto state 49
    '+'   shift, and goto state 47
    '-'   shift, and goto state 48
    '/'   shift, and goto state 50
    ']'   reduce using rule 17 (ExprBool)
    AND   reduce using rule 17 (ExprBool)
    OR    reduce using rule 17 (ExprBool)

state 63 // ARRAYS GTR ARRAYS [$end]

   16 ExprBool: ExprCalc GTR ExprCalc .  [$end, ')', ']', AND, OR]  // assoc %left, prec 3
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 16 (ExprBool)
    '%'   shift, and goto state 51
    ')'   reduce using rule 16 (ExprBool)
    '*'   shift, and goto state 49
    '+'   shift, and goto state 47
    '-'   shift, and goto state 48
    '/'   shift, and goto state 50
    ']'   reduce using rule 16 (ExprBool)
    AND   reduce using rule 16 (ExprBool)
    OR    reduce using rule 16 (ExprBool)

state 64 // ARRAYS LEQ ARRAYS [$end]

   15 ExprBool: ExprCalc LEQ ExprCalc .  [$end, ')', ']', AND, OR]  // assoc %left, prec 3
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 15 (ExprBool)
    '%'   shift, and goto state 51
    ')'   reduce using rule 15 (ExprBool)
    '*'   shift, and goto state 49
    '+'   shift, and goto state 47
    '-'   shift, and goto state 48
    '/'   shift, and goto state 50
    ']'   reduce using rule 15 (ExprBool)
    AND   reduce using rule 15 (ExprBool)
    OR    reduce using rule 15 (ExprBool)

state 65 // ARRAYS LSS ARRAYS [$end]

   14 ExprBool: ExprCalc LSS ExprCalc .  [$end, ')', ']', AND, OR]  // assoc %left, prec 3
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 14 (ExprBool)
    '%'   shift, and goto state 51
    ')'   reduce using rule 14 (ExprBool)
    '*'   shift, and goto state 49
    '+'   shift, and goto state 47
    '-'   shift, and goto state 48
    '/'   shift, and goto state 50
    ']'   reduce using rule 14 (ExprBool)
    AND   reduce using rule 14 (ExprBool)
    OR    reduce using rule 14 (ExprBool)

state 66 // ARRAYS '[' FALSE ']'

   49 FilterCell: FilterName '[' ExprBool ']' .  [$end, ')', AND, OR]

    $end  reduce using rule 49 (FilterCell)
    ')'   reduce using rule 49 (FilterCell)
    AND   reduce using rule 49 (FilterCell)
    OR    reduce using rule 49 (FilterCell)

state 67 // IDENT IN

   10 ExprBool: Ident IN . '(' InArgs ')'

    '('  shift, and goto state 76

state 68 // IDENT NOTIN

   11 ExprBool: Ident NOTIN . '(' InArgs ')'

    '('  shift, and goto state 69

state 69 // IDENT NOTIN '('

   11 ExprBool: Ident NOTIN '(' . InArgs ')'

    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 72
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays   goto state 35
    ExprExt  goto state 71
    Float    goto state 18
    Ident    goto state 56
    InArgs   goto state 70
    Int      goto state 17
    String   goto state 19

state 70 // IDENT NOTIN '(' ARRAYS [')']

   11 ExprBool: Ident NOTIN '(' InArgs . ')'
   34 InArgs: InArgs . ',' ExprExt

    ')'  shift, and goto state 73
    ','  shift, and goto state 74

state 71 // IDENT NOTIN '(' ARRAYS [')']

   33 InArgs: ExprExt .  [')', ',']

    ')'  reduce using rule 33 (InArgs)
    ','  reduce using rule 33 (InArgs)

state 72 // IDENT NOTIN '(' IDENT

   52 Ident: IDENT .  [')', ',']

    ')'  reduce using rule 52 (Ident)
    ','  reduce using rule 52 (Ident)

state 73 // IDENT NOTIN '(' ARRAYS ')'

   11 ExprBool: Ident NOTIN '(' InArgs ')' .  [$end, ')', ']', AND, OR]

    $end  reduce using rule 11 (ExprBool)
    ')'   reduce using rule 11 (ExprBool)
    ']'   reduce using rule 11 (ExprBool)
    AND   reduce using rule 11 (ExprBool)
    OR    reduce using rule 11 (ExprBool)

state 74 // IDENT NOTIN '(' ARRAYS ','

   34 InArgs: InArgs ',' . ExprExt

    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 72
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays   goto state 35
    ExprExt  goto state 75
    Float    goto state 18
    Ident    goto state 56
    Int      goto state 17
    String   goto state 19

state 75 // IDENT NOTIN '(' ARRAYS ',' ARRAYS [')']

   34 InArgs: InArgs ',' ExprExt .  [')', ',']

    ')'  reduce using rule 34 (InArgs)
    ','  reduce using rule 34 (InArgs)

state 76 // IDENT IN '('

   10 ExprBool: Ident IN '(' . InArgs ')'

    ARRAYS  shift, and goto state 24
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 72
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27

    Arrays   goto state 35
    ExprExt  goto state 71
    Float    goto state 18
    Ident    goto state 56
    InArgs   goto state 77
    Int      goto state 17
    String   goto state 19

state 77 // IDENT IN '(' ARRAYS [')']

   10 ExprBool: Ident IN '(' InArgs . ')'
   34 InArgs: InArgs . ',' ExprExt

    ')'  shift, and goto state 78
    ','  shift, and goto state 74

state 78 // IDENT IN '(' ARRAYS ')'

   10 ExprBool: Ident IN '(' InArgs ')' .  [$end, ')', ']', AND, OR]

    $end  reduce using rule 10 (ExprBool)
    ')'   reduce using rule 10 (ExprBool)
    ']'   reduce using rule 10 (ExprBool)
    AND   reduce using rule 10 (ExprBool)
    OR    reduce using rule 10 (ExprBool)

state 79 // IDENT '('

   40 ExprFunc: IDENT '(' . ')'
   41 ExprFunc: IDENT '(' . Args ')'

    '('     shift, and goto state 54
    ')'     shift, and goto state 82
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Args      goto state 83
    Arrays    goto state 35
    Bool      goto state 80
    BoolCell  goto state 84
    CalcCell  goto state 14
    ExprCalc  goto state 81
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 80 // IDENT '(' FALSE [$end]

   21 BoolCell: Bool .  [$end, ')', ',', ']', AND, OR]

    $end  reduce using rule 21 (BoolCell)
    ')'   reduce using rule 21 (BoolCell)
    ','   reduce using rule 21 (BoolCell)
    ']'   reduce using rule 21 (BoolCell)
    AND   reduce using rule 21 (BoolCell)
    OR    reduce using rule 21 (BoolCell)

state 81 // IDENT '(' ARRAYS [$end]

   22 BoolCell: ExprCalc .  [$end, ')', ',', ']', AND, OR]
   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5

    $end  reduce using rule 22 (BoolCell)
    '%'   shift, and goto state 51
    ')'   reduce using rule 22 (BoolCell)
    '*'   shift, and goto state 49
    '+'   shift, and goto state 47
    ','   reduce using rule 22 (BoolCell)
    '-'   shift, and goto state 48
    '/'   shift, and goto state 50
    ']'   reduce using rule 22 (BoolCell)
    AND   reduce using rule 22 (BoolCell)
    OR    reduce using rule 22 (BoolCell)

state 82 // IDENT '(' ')'

   40 ExprFunc: IDENT '(' ')' .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 40 (ExprFunc)
    '%'   reduce using rule 40 (ExprFunc)
    ')'   reduce using rule 40 (ExprFunc)
    '*'   reduce using rule 40 (ExprFunc)
    '+'   reduce using rule 40 (ExprFunc)
    ','   reduce using rule 40 (ExprFunc)
    '-'   reduce using rule 40 (ExprFunc)
    '/'   reduce using rule 40 (ExprFunc)
    ']'   reduce using rule 40 (ExprFunc)
    AND   reduce using rule 40 (ExprFunc)
    EQU   reduce using rule 40 (ExprFunc)
    GEQ   reduce using rule 40 (ExprFunc)
    GTR   reduce using rule 40 (ExprFunc)
    LEQ   reduce using rule 40 (ExprFunc)
    LSS   reduce using rule 40 (ExprFunc)
    NEQ   reduce using rule 40 (ExprFunc)
    OR    reduce using rule 40 (ExprFunc)

state 83 // IDENT '(' ARRAYS [')']

   41 ExprFunc: IDENT '(' Args . ')'
   43 Args: Args . ',' BoolCell

    ')'  shift, and goto state 85
    ','  shift, and goto state 86

state 84 // IDENT '(' ARRAYS [')']

   42 Args: BoolCell .  [')', ',']

    ')'  reduce using rule 42 (Args)
    ','  reduce using rule 42 (Args)

state 85 // IDENT '(' ARRAYS ')'

   41 ExprFunc: IDENT '(' Args ')' .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]

    $end  reduce using rule 41 (ExprFunc)
    '%'   reduce using rule 41 (ExprFunc)
    ')'   reduce using rule 41 (ExprFunc)
    '*'   reduce using rule 41 (ExprFunc)
    '+'   reduce using rule 41 (ExprFunc)
    ','   reduce using rule 41 (ExprFunc)
    '-'   reduce using rule 41 (ExprFunc)
    '/'   reduce using rule 41 (ExprFunc)
    ']'   reduce using rule 41 (ExprFunc)
    AND   reduce using rule 41 (ExprFunc)
    EQU   reduce using rule 41 (ExprFunc)
    GEQ   reduce using rule 41 (ExprFunc)
    GTR   reduce using rule 41 (ExprFunc)
    LEQ   reduce using rule 41 (ExprFunc)
    LSS   reduce using rule 41 (ExprFunc)
    NEQ   reduce using rule 41 (ExprFunc)
    OR    reduce using rule 41 (ExprFunc)

state 86 // IDENT '(' ARRAYS ','

   43 Args: Args ',' . BoolCell

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 80
    BoolCell  goto state 87
    CalcCell  goto state 14
    ExprCalc  goto state 81
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 87 // IDENT '(' ARRAYS ',' ARRAYS [')']

   43 Args: Args ',' BoolCell .  [')', ',']

    ')'  reduce using rule 43 (Args)
    ','  reduce using rule 43 (Args)

state 88 // '-' ARRAYS [$end]

   24 ExprCalc: ExprCalc . '+' ExprCalc  // assoc %left, prec 4
   25 ExprCalc: ExprCalc . '-' ExprCalc  // assoc %left, prec 4
   26 ExprCalc: ExprCalc . '*' ExprCalc  // assoc %left, prec 5
   27 ExprCalc: ExprCalc . '/' ExprCalc  // assoc %left, prec 5
   28 ExprCalc: ExprCalc . '%' ExprCalc  // assoc %left, prec 5
   29 ExprCalc: '-' ExprCalc .  [$end, '%', ')', '*', '+', ',', '-', '/', ']', AND, EQU, GEQ, GTR, LEQ, LSS, NEQ, OR]  // assoc %left, prec 6

    $end  reduce using rule 29 (ExprCalc)
    '%'   reduce using rule 29 (ExprCalc)
    ')'   reduce using rule 29 (ExprCalc)
    '*'   reduce using rule 29 (ExprCalc)
    '+'   reduce using rule 29 (ExprCalc)
    ','   reduce using rule 29 (ExprCalc)
    '-'   reduce using rule 29 (ExprCalc)
    '/'   reduce using rule 29 (ExprCalc)
    ']'   reduce using rule 29 (ExprCalc)
    AND   reduce using rule 29 (ExprCalc)
    EQU   reduce using rule 29 (ExprCalc)
    GEQ   reduce using rule 29 (ExprCalc)
    GTR   reduce using rule 29 (ExprCalc)
    LEQ   reduce using rule 29 (ExprCalc)
    LSS   reduce using rule 29 (ExprCalc)
    NEQ   reduce using rule 29 (ExprCalc)
    OR    reduce using rule 29 (ExprCalc)

state 89 // '(' FALSE [')']

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   20 ExprBool: '(' ExprBool . ')'
   46 ExprFilter: ExprBool . AND FilterCell  // assoc %left, prec 2
   47 ExprFilter: ExprBool . OR FilterCell  // assoc %left, prec 1

    ')'  shift, and goto state 40
    AND  shift, and goto state 97
    OR   shift, and goto state 98

state 90 // '(' ARRAYS '[' FALSE ']' [AND]

   44 ExprFilter: FilterCell . AND ExprBool  // assoc %left, prec 2
   45 ExprFilter: FilterCell . OR ExprBool  // assoc %left, prec 1

    AND  shift, and goto state 93
    OR   shift, and goto state 94

state 91 // '(' ARRAYS '[' FALSE ']' AND FALSE [')']

   48 ExprFilter: '(' ExprFilter . ')'

    ')'  shift, and goto state 92

state 92 // '(' ARRAYS '[' FALSE ']' AND FALSE ')'

   48 ExprFilter: '(' ExprFilter ')' .  [$end, ')']

    $end  reduce using rule 48 (ExprFilter)
    ')'   reduce using rule 48 (ExprFilter)

state 93 // ARRAYS '[' FALSE ']' AND

   44 ExprFilter: FilterCell AND . ExprBool  // assoc %left, prec 2

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 8
    BoolCell  goto state 11
    CalcCell  goto state 14
    ExprBool  goto state 96
    ExprCalc  goto state 12
    ExprExt   goto state 34
    ExprFunc  goto state 9
    Float     goto state 18
    Ident     goto state 31
    Int       goto state 17
    String    goto state 19

state 94 // ARRAYS '[' FALSE ']' OR

   45 ExprFilter: FilterCell OR . ExprBool  // assoc %left, prec 1

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 8
    BoolCell  goto state 11
    CalcCell  goto state 14
    ExprBool  goto state 95
    ExprCalc  goto state 12
    ExprExt   goto state 34
    ExprFunc  goto state 9
    Float     goto state 18
    Ident     goto state 31
    Int       goto state 17
    String    goto state 19

state 95 // ARRAYS '[' FALSE ']' OR FALSE [$end]

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   45 ExprFilter: FilterCell OR ExprBool .  [$end, ')']  // assoc %left, prec 1

    $end  reduce using rule 45 (ExprFilter)
    ')'   reduce using rule 45 (ExprFilter)
    AND   shift, and goto state 38
    OR    shift, and goto state 39

state 96 // ARRAYS '[' FALSE ']' AND FALSE [$end]

   18 ExprBool: ExprBool . AND ExprBool  // assoc %left, prec 2
   19 ExprBool: ExprBool . OR ExprBool  // assoc %left, prec 1
   44 ExprFilter: FilterCell AND ExprBool .  [$end, ')']  // assoc %left, prec 2

    $end  reduce using rule 44 (ExprFilter)
    ')'   reduce using rule 44 (ExprFilter)
    AND   shift, and goto state 38
    OR    shift, and goto state 39

state 97 // FALSE AND

   18 ExprBool: ExprBool AND . ExprBool  // assoc %left, prec 2
   46 ExprFilter: ExprBool AND . FilterCell  // assoc %left, prec 2

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays      goto state 16
    Bool        goto state 8
    BoolCell    goto state 11
    CalcCell    goto state 14
    ExprBool    goto state 42
    ExprCalc    goto state 12
    ExprExt     goto state 34
    ExprFunc    goto state 9
    FilterCell  goto state 100
    FilterName  goto state 21
    Float       goto state 18
    Ident       goto state 10
    Int         goto state 17
    String      goto state 19

state 98 // FALSE OR

   19 ExprBool: ExprBool OR . ExprBool  // assoc %left, prec 1
   47 ExprFilter: ExprBool OR . FilterCell  // assoc %left, prec 1

    '('     shift, and goto state 33
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays      goto state 16
    Bool        goto state 8
    BoolCell    goto state 11
    CalcCell    goto state 14
    ExprBool    goto state 41
    ExprCalc    goto state 12
    ExprExt     goto state 34
    ExprFunc    goto state 9
    FilterCell  goto state 99
    FilterName  goto state 21
    Float       goto state 18
    Ident       goto state 10
    Int         goto state 17
    String      goto state 19

state 99 // FALSE OR ARRAYS '[' FALSE ']' [$end]

   47 ExprFilter: ExprBool OR FilterCell .  [$end, ')']  // assoc %left, prec 1

    $end  reduce using rule 47 (ExprFilter)
    ')'   reduce using rule 47 (ExprFilter)

state 100 // FALSE AND ARRAYS '[' FALSE ']' [$end]

   46 ExprFilter: ExprBool AND FilterCell .  [$end, ')']  // assoc %left, prec 2

    $end  reduce using rule 46 (ExprFilter)
    ')'   reduce using rule 46 (ExprFilter)

state 101 // ARRAYS NEQ

   12 ExprBool: BoolCell NEQ . BoolCell  // assoc %left, prec 3

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 80
    BoolCell  goto state 104
    CalcCell  goto state 14
    ExprCalc  goto state 81
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 102 // ARRAYS EQU

   13 ExprBool: BoolCell EQU . BoolCell  // assoc %left, prec 3

    '('     shift, and goto state 54
    '-'     shift, and goto state 15
    ARRAYS  shift, and goto state 24
    FALSE   shift, and goto state 29
    FLOAT   shift, and goto state 26
    IDENT   shift, and goto state 20
    IN      shift, and goto state 22
    INT     shift, and goto state 25
    NOTIN   shift, and goto state 23
    STRING  shift, and goto state 27
    TRUE    shift, and goto state 28

    Arrays    goto state 35
    Bool      goto state 80
    BoolCell  goto state 103
    CalcCell  goto state 14
    ExprCalc  goto state 81
    ExprExt   goto state 34
    ExprFunc  goto state 55
    Float     goto state 18
    Ident     goto state 56
    Int       goto state 17
    String    goto state 19

state 103 // ARRAYS EQU ARRAYS [$end]

   13 ExprBool: BoolCell EQU BoolCell .  [$end, ')', ']', AND, OR]  // assoc %left, prec 3

    $end  reduce using rule 13 (ExprBool)
    ')'   reduce using rule 13 (ExprBool)
    ']'   reduce using rule 13 (ExprBool)
    AND   reduce using rule 13 (ExprBool)
    OR    reduce using rule 13 (ExprBool)

state 104 // ARRAYS NEQ ARRAYS [$end]

   12 ExprBool: BoolCell NEQ BoolCell .  [$end, ')', ']', AND, OR]  // assoc %left, prec 3

    $end  reduce using rule 12 (ExprBool)
    ')'   reduce using rule 12 (ExprBool)
    ']'   reduce using rule 12 (ExprBool)
    AND   reduce using rule 12 (ExprBool)
    OR    reduce using rule 12 (ExprBool)

